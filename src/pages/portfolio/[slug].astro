---
import BaseLayout from '../../layouts/BaseLayout.astro';
import getPortfolioData from '../../utils/getPortfolioData';
import VideoBacking from '../../components/VideoBacking.astro';
import RotatingWords from '../../components/RotatingWords.astro';
import Forms from '../../components/Forms.astro';

export async function getStaticPaths() {
  const posts = await import.meta.glob('../../../data/portfolio/*.md', { eager: true });
  return Object.entries(posts).map(([file, post]) => ({
    params: {
      slug: file.split('/').pop().split('.').shift()
    },
    props: {
      post
    },
  }));
}

const { Content, frontmatter } = Astro.props.post;
const { client, tagline, affiliate, searchTerm, searchLink, launchDate, scope, imgPath, logo, photos } = frontmatter;
const { slug } = getPortfolioData(Astro.props.post);
const permalink = `${Astro.site.href}portfolio/${slug}`;
const archive = '/portfolio';

---

<BaseLayout title={`${client} â†’ Portfolio`} description={`${scope} made for ${client}`} permalink={permalink} current="portfolio">
  <header>
    <div class="top">
      <a href={archive} class="back">&larr; Back to Portfolio</a>
      <span>&bull;</span>
      <h1>{client}</h1>
      <p>{tagline}</p>
    </div>
    <div class="logo">
      <VideoBacking />
      <img src={`${imgPath}${logo}`} width="1600" height="900" alt={`Logo for ${client}`} />
    </div>
    <div class="meta">
      <p>{scope}</p>
      <a href={`https://${searchLink}`} target="_blank">{searchTerm} <strong>&bull;</strong> {searchLink}</a>
      <p>Launched {launchDate}{affiliate !== 'none' && ` in association with ${affiliate}`}</p>
    </div>
  </header>
  <section>
    <Content />
  </section>
  <footer>
    <nav>
      <button data-nav="previous">&larr;</button>
      {photos.map((photo, index) => (
        <span data-slide-index={index} class="nav-item">{photo['title']}</span>
      ))}
      <button data-nav="next">&rarr;</button>
    </nav>
    <div class="slideshow">
      {photos.map((photo) => (
        <a href={`https://${searchLink}`} target="_blank" title=`Visit the website for ${client}` class="slide">
          <div style=`background-image: url('${imgPath}${photo['img']}')`></div>
          <img src={`${imgPath}${photo['img']}`} width="1920" height="1080" alt={photo['title']} />
        </a>
      ))}
    </div>
  </footer>
  <footer class="cta-form">
    <RotatingWords before="Let's talk about your" words={['Website', 'Software', 'Mobile app']} after="next steps" />
    <Forms formType="Consult" />
  </footer>

  <script is:inline>
        (function() {
          const slides = document.querySelectorAll('.slide');
          const navItems = document.querySelectorAll('footer nav .nav-item');
          const prevButton = document.querySelector('button[data-nav="previous"]');
          const nextButton = document.querySelector('button[data-nav="next"]');

          let currentSlide = 0;
          const totalSlides = slides.length;
          const slideIntervalTime = 5000;
          let slideInterval;

          function showSlide(index) {
            if (index < 0 || index >= totalSlides) return;

            slides.forEach((slide, i) => {
              slide.style.opacity = i === index ? '1' : '0';
              slide.style.visibility = i === index ? 'visible' : 'hidden';
            });

            activateNav(index);
            currentSlide = index;
          }

          // Activate the corresponding navigation item
          function activateNav(index) {
            navItems.forEach((navItem, i) => {
              navItem.classList.toggle('is-active', i === index);
            });
          }

          function nextSlide() {
            const nextIndex = (currentSlide + 1) % totalSlides;
            showSlide(nextIndex);
          }

          function prevSlide() {
            const prevIndex = (currentSlide - 1 + totalSlides) % totalSlides;
            showSlide(prevIndex);
          }

          navItems.forEach((navItem, index) => {
            navItem.addEventListener('click', () => {
              clearInterval(slideInterval);
              showSlide(index);
              slideInterval = setInterval(nextSlide, slideIntervalTime);
            });
          });

          nextButton.addEventListener('click', () => {
            clearInterval(slideInterval);
            nextSlide();
            slideInterval = setInterval(nextSlide, slideIntervalTime);
          });

          prevButton.addEventListener('click', () => {
            clearInterval(slideInterval);
            prevSlide();
            slideInterval = setInterval(nextSlide, slideIntervalTime);
          });

          function startSlideshow() {
            showSlide(currentSlide);
            slideInterval = setInterval(nextSlide, slideIntervalTime);
          }

          startSlideshow();

          function cleanupSlideshow() {
            clearInterval(slideInterval);
            showSlide(0);
          }

          window.addEventListener('pageshow', (event) => {
            if (event.persisted) {
              cleanupSlideshow();
              startSlideshow();
            }
          });
        })();
  </script>
</BaseLayout>

<style>
    header {
        position: relative;
        background-color: var(--color-black);
    }

    .top {
        display: flex;
        flex-wrap: wrap;
        align-items: center;
        padding: var(--pad-small) var(--pad-small) 0 var(--pad-small);
    }

    .top p {
        width: 100%;
        font-size: 0.85em;
    }

    .cta-form {
        padding: var(--pad) var(--pad-small) 0 var(--pad-small);
    }

    @media (min-width: 960px) {
        .top {
            padding-top: var(--pad-small);
            padding-left: 0;
            padding-right: var(--pad);
            font-size: 1.25em;
        }

        .cta-form {
            padding:  var(--pad-small) var(--pad) 0 0;
        }
    }

    header span {
        margin: 1ex;
    }

    h1 {
        font-size: 1em;
        margin: 0;
        padding: 0;
        color: var(--color-white);
    }

    .back {
        font-size: 0.85em;
        margin: 0;
        padding: 0;
    }

    .logo {
        position: relative;
        width: 100%;
        height: auto;
        aspect-ratio: 16 / 9;
        overflow: hidden;
    }

    .logo img {
        display: block;
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        mix-blend-mode: multiply;
        object-fit: cover;
    }

    .meta {
        padding: var(--pad-small);
        font-size: 0.85em;
    }

    .meta p {
        padding: 0;
        margin: 0.25rem 0;
    }

    .meta a {
        display: block;
    }

    .meta a strong {
        color: var(--color-white);
    }

    section {
        padding: 0 var(--pad-small);
        background-color: var(--color-black);
        max-width: var(--layout-max--reading);
    }

    .slideshow {
        position: relative;
        width: 100%;
        overflow: hidden;
        aspect-ratio: 1/1;
    }

    @media (min-width: 960px) {
        section {
            padding-left: 0;
        }

        .slideshow {
            aspect-ratio: 16/9;
        }

        .meta {
            padding-left: 0;
            padding-right: var(--pad);
        }
    }

    .slide {
        transition: var(--transition-grow);
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        opacity: 0;
        visibility: hidden;
    }

    .slide div {
        position: absolute;
        width: 100%;
        height: 100%;
        background-position: center center;
        background-size: cover;
        z-index: 0;
        filter: blur(0.666rem) grayscale(100%);
        opacity: 0.3;
    }

    .slide img {
        position: relative;
        z-index: 1;
        display: block;
        width: 100%;
        height: 100%;
        object-fit: contain;
        object-position: center center;
    }

    footer {
        background-color: var(--color-black);
    }

    footer nav {
        display: flex;
        justify-content: space-between;
        align-items: center;
        font-size: 0.85em;
        padding: var(--pad-small);
        width: 100%;
    }

    footer nav button {
        appearance: none;
        border: none;
        background-color: transparent;
        color: var(--color-yellow);
        font-weight: var(--font-weight--bold);
        font-size: 1.15em;
        font-family: var(--font-family--default);
        cursor: pointer;
    }

    footer nav span {
        display: block;
        min-width: 1em;
        width: 1.5em;
        height: 1em;
        overflow: hidden;
        background-color: var(--color-yellow);
        transition: var(--transition-grow);
        color: transparent;
        margin: 0.5rem;
        border-radius: 50%;
        cursor: pointer;
    }

    footer nav span.is-active {
        background-color: transparent;
        width: 100%;
        color: var(--color-white);
        text-align: center;
        border-radius: 0;
        line-height: 1.5;
        height: 1.5em;
    }


</style>
